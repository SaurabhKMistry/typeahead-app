{"ast":null,"code":"var _jsxFileName = \"/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/demo.js\";\nimport React from 'react';\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'blue'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'blue'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'blue'\n      }\n    }\n  }\n})(TextField);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff'\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'blue',\n      borderWidth: 2\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important' // override inline-style\n\n    }\n  }\n})(TextField);\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  onTextChange = e => {\n    let suggestions = [];\n    const value = e.target.value;\n\n    if (value.length > 0) {\n      fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\").then(res => res.json()).then(result => {\n        this.setState({\n          suggestions: result,\n          text: value\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    }\n\n    this.setState(() => ({\n      suggestions,\n      text: value\n    }));\n  };\n\n  suggestionSelected = value => {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  };\n\n  renderSuggestions = () => {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 8\n      }\n    }, suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"li\", {\n      key: suggestion,\n      onClick: e => this.suggestionSelected(suggestion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, suggestion)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: this.handleChange,\n    className: classes.margin,\n    label: \"Enter Employee name\",\n    variant: \"outlined\",\n    id: \"mui-theme-provider-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), this.renderSuggestions()));\n}","map":{"version":3,"sources":["/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/demo.js"],"names":["React","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","InputBase","InputLabel","TextField","FormControl","green","blue","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles","display","flexWrap","margin","ValidationTextField","borderWidth","borderLeftWidth","CustomizedInputs","onTextChange","e","suggestions","value","target","length","fetch","then","res","json","result","setState","text","error","isLoaded","suggestionSelected","renderSuggestions","state","map","suggestion","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  fade,\n  ThemeProvider,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'blue',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'blue',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'blue',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles((theme) => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'blue',\n      borderWidth: 2,\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2,\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important', // override inline-style\n    },\n  },\n})(TextField);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\n\n\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  onTextChange = (e) => {\n     let suggestions = [];\n     const value = e.target.value;\n     if (value.length > 0) {\n        fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              suggestions: result,\n              text:value\n            });\n          },\n\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n     }\n\n      this.setState(() => ({\n        suggestions,\n        text:value\n      }));\n   }\n\n   suggestionSelected=(value)=>{\n     this.setState(()=>({\n       text:value,\n       suggestions:[]\n     }))\n   }\n\n   renderSuggestions = () => {\n     const { suggestions } = this.state;\n     if (suggestions.length === 0) {\n       return null;\n     }\n     return (\n       <ul>\n         {suggestions.map(suggestion => <li key={suggestion} onClick={(e)=>this.suggestionSelected(suggestion)}>{suggestion}</li>)}\n       </ul>\n     )\n   }\n     \n  return (\n    <form align=\"middle\">\n      <ThemeProvider theme={theme}>\n        <TextField\n          onChange={this.handleChange}\n          className={classes.margin}\n          label=\"Enter Employee name\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n        {this.renderSuggestions()}\n      </ThemeProvider>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}