{"ast":null,"code":"var _jsxFileName = \"/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/demo.js\";\nimport React from 'react';\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'blue'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'blue'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'blue'\n      }\n    }\n  }\n})(TextField);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'blue',\n      borderWidth: 2\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important' // override inline-style\n\n    }\n  }\n})(TextField);\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nexport default class CustomizedInputs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      let suggestions = [];\n      const value = e.target.value;\n\n      if (value.length > 0) {\n        fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\").then(res => res.json()).then(result => {\n          this.setState({\n            suggestions: result,\n            text: value\n          });\n        }, error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"form\", {\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.margin,\n      label: \"Enter Employee name\",\n      variant: \"outlined\",\n      id: \"mui-theme-provider-outlined-input\",\n      value: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/demo.js"],"names":["React","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","InputBase","InputLabel","TextField","FormControl","green","blue","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStyles","display","flexWrap","margin","ValidationTextField","borderWidth","borderLeftWidth","CustomizedInputs","Component","constructor","props","onTextChange","e","suggestions","value","target","length","fetch","then","res","json","result","setState","text","error","isLoaded","state","render","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  fade,\n  ThemeProvider,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'blue',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'blue',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'blue',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'blue',\n      borderWidth: 2,\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2,\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important', // override inline-style\n    },\n  },\n})(TextField);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\n\nexport default class CustomizedInputs extends React.Component {\nconstructor(props) {\n        super(props);\n           this.state = {\n             suggestions: [],\n             text:''\n          }\n     }\n     onTextChange = (e) => {\n        let suggestions = [];\n        const value = e.target.value;\n        if (value.length > 0) {\n           fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\")\n           .then(res => res.json())\n           .then(\n             (result) => {\n               this.setState({\n                 suggestions: result,\n                 text:value\n               });\n             },\n\n             (error) => {\n               this.setState({\n                 isLoaded: true,\n                 error\n               });\n             }\n           )\n        }\n\n         this.setState(() => ({\n           suggestions,\n           text:value\n         }));\n      }\nrender() {\n  const {text}=this.state\n  const classes = useStyles();\n  return (\n    <form align=\"middle\">\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"Enter Employee name\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n          value={text}\n        />\n      </ThemeProvider>\n    </form>\n  );}\n}\n"]},"metadata":{},"sourceType":"module"}