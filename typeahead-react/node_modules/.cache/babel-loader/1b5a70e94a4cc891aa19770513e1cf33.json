{"ast":null,"code":"var _jsxFileName = \"/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/typeahead/TypeAheadDropDown.js\";\n// TypeAheadDropDown.js\nimport '../index.css';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nexport default class TypeAheadDropDown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      let suggestions = [];\n      const value = e.target.value;\n\n      if (value.length > 0) {\n        fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\").then(res => res.json()).then(result => {\n          this.setState({\n            suggestions: result,\n            text: value\n          });\n        }, error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.suggestionSelected = value => {\n      this.setState(() => ({\n        text: value,\n        suggestions: []\n      }));\n    };\n\n    this.renderSuggestions = () => {\n      const {\n        suggestions\n      } = this.state;\n\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }\n      }, suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"li\", {\n        key: suggestion,\n        onClick: e => this.suggestionSelected(suggestion),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }\n      }, suggestion)));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      margin: {\n        margin: theme.spacing(1)\n      }\n    }));\n    const {\n      text\n    } = this.state;\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TypeAheadDropDown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.margin,\n      onChange: this.onTextChange,\n      placeholder: \"Start typing word...\",\n      value: text,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/Users/crao/Documents/Work/Codebase/osr/typeahead-react-spring-boot/typeahead-react/src/typeahead/TypeAheadDropDown.js"],"names":["React","TextField","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","TypeAheadDropDown","Component","constructor","props","onTextChange","e","suggestions","value","target","length","fetch","then","res","json","result","setState","text","error","isLoaded","suggestionSelected","renderSuggestions","state","map","suggestion","render","useStyles","theme","root","display","flexWrap","margin","spacing","classes"],"mappings":"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","sourcesContent":["// TypeAheadDropDown.js\nimport '../index.css'\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  fade,\n  ThemeProvider,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nexport default class TypeAheadDropDown extends React.Component {\n     constructor(props) {\n        super(props);\n           this.state = {\n             suggestions: [],\n             text:''\n          }\n     }\n \n onTextChange = (e) => {\n   let suggestions = [];\n   const value = e.target.value;\n   if (value.length > 0) {\n      fetch(\"http://localhost:8080/typeahead?prefix=\" + value + \"&suggestionCount=15\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            suggestions: result,\n            text:value\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n   }\n\n    this.setState(() => ({\n      suggestions,\n      text:value\n    }));\n }\n \n suggestionSelected=(value)=>{\n   this.setState(()=>({\n     text:value,\n     suggestions:[]\n   }))\n }\n \n renderSuggestions = () => {\n   const { suggestions } = this.state;\n   if (suggestions.length === 0) {\n     return null;\n   }\n   return (\n     <ul>\n       {suggestions.map(suggestion => <li key={suggestion} onClick={(e)=>this.suggestionSelected(suggestion)}>{suggestion}</li>)}\n     </ul>\n   )\n }\n \n\n render() {\n const useStyles = makeStyles((theme) => ({\n   root: {\n     display: 'flex',\n     flexWrap: 'wrap',\n   },\n   margin: {\n     margin: theme.spacing(1),\n   },\n }));\n   const {text}=this.state\n     const classes = useStyles();\n\n   return (\n   <div className=\"TypeAheadDropDown\">\n     <TextField\n        className={classes.margin}\n     onChange={this.onTextChange} placeholder=\"Start typing word...\" value={text} type=\"text\" />\n     {this.renderSuggestions()}\n   </div>\n   );\n }\n \n}"]},"metadata":{},"sourceType":"module"}